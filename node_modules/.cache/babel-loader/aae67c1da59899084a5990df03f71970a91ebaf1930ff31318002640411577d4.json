{"ast":null,"code":"//import { createStore } from \"redux\";///equal to require(\"redux\")\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from './counter-slice';\nimport authReducer from './auth-slice';\nconst store = configureStore({\n  reducer: {\n    county: counterReducer,\n    auth: authReducer\n  } //reducer: counterSlice.reducer,auth:authSlice.reducer} it can be return as if there are multiple reducer\n});\nexport default store;\n\n//export const INCREMENT = \"increment\";//to avoid spelling mistake\n//export const DECREMENT = \"decrement\";\n\n// const counterReducer = (state = { counter: 1, showCounter:false }, action) => {\n\n//     if(action.type === \"increment\"){\n//         return{\n//             ...state,\n//             counter:state.counter + 1,\n//            // showCounter:state.showCounter,//either of counter must be at rest\n//         };\n//     }\n\n//     if(action.type === \"decrement\"){\n//         return{\n//             ...state,\n//             counter:state.counter - 1,\n//             //showCounter:state.showCounter,\n//         };\n//     }\n\n//     if(action.type === \"incrementBy5\"){\n//         return{\n//             ...state,//it act as a single spread operator instead of multiple state counter\n//             counter:state.counter + 5,\n//             //showCounter:state.showCounter,\n//         };\n//     }\n\n//     if(action.type === \"toggle\"){\n//         return{\n//             ...state,\n//             showCounter: !state.showCounter,\n//             //counter:state.counter,\n//         };\n//     }\n//     return state;\n\n// };===counterSlice","map":{"version":3,"names":["configureStore","counterReducer","authReducer","store","reducer","county","auth"],"sources":["C:/React/01-STARTING-PROJECT 07/src/store/index.js"],"sourcesContent":["//import { createStore } from \"redux\";///equal to require(\"redux\")\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport counterReducer from './counter-slice';\r\nimport authReducer from './auth-slice';\r\n\r\nconst store = configureStore({\r\n    reducer: {county:counterReducer,auth: authReducer },//reducer: counterSlice.reducer,auth:authSlice.reducer} it can be return as if there are multiple reducer\r\n});\r\n\r\nexport default store;\r\n\r\n//export const INCREMENT = \"increment\";//to avoid spelling mistake\r\n//export const DECREMENT = \"decrement\";\r\n\r\n// const counterReducer = (state = { counter: 1, showCounter:false }, action) => {\r\n\r\n//     if(action.type === \"increment\"){\r\n//         return{\r\n//             ...state,\r\n//             counter:state.counter + 1,\r\n//            // showCounter:state.showCounter,//either of counter must be at rest\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === \"decrement\"){\r\n//         return{\r\n//             ...state,\r\n//             counter:state.counter - 1,\r\n//             //showCounter:state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === \"incrementBy5\"){\r\n//         return{\r\n//             ...state,//it act as a single spread operator instead of multiple state counter\r\n//             counter:state.counter + 5,\r\n//             //showCounter:state.showCounter,\r\n//         };\r\n//     }\r\n\r\n//     if(action.type === \"toggle\"){\r\n//         return{\r\n//             ...state,\r\n//             showCounter: !state.showCounter,\r\n//             //counter:state.counter,\r\n//         };\r\n//     }\r\n//     return state;\r\n\r\n// };===counterSlice\r\n"],"mappings":"AAAA;AACA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,cAAc,MAAM,iBAAiB;AAC5C,OAAOC,WAAW,MAAM,cAAc;AAEtC,MAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IAACC,MAAM,EAACJ,cAAc;IAACK,IAAI,EAAEJ;EAAY,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,eAAeC,KAAK;;AAEpB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}